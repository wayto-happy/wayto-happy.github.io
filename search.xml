<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>修改Hexo博客代码显示界面</title>
      <link href="/2022/10/21/%E4%BF%AE%E6%94%B9Hexo%E5%8D%9A%E5%AE%A2%E4%BB%A3%E7%A0%81%E6%98%BE%E7%A4%BA%E7%95%8C%E9%9D%A2/"/>
      <url>/2022/10/21/%E4%BF%AE%E6%94%B9Hexo%E5%8D%9A%E5%AE%A2%E4%BB%A3%E7%A0%81%E6%98%BE%E7%A4%BA%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>To learn！</p><p>To live！ </p><p>To love！</p><hr><h1 id="修改Hexo博客代码显示界面"><a href="#修改Hexo博客代码显示界面" class="headerlink" title="修改Hexo博客代码显示界面"></a>修改Hexo博客代码显示界面</h1><h2 id="一、配置js文件"><a href="#一、配置js文件" class="headerlink" title="一、配置js文件"></a>一、配置js文件</h2><p>进入要修改主题文件夹themes/**/source/libs 路径之后，创建一个codeBlock文件夹</p><p>然后在该文件下创建五个后缀 .js 文件，并分别写入下方代码</p><h3 id="1、codeBlockFuction-js-文件"><a href="#1、codeBlockFuction-js-文件" class="headerlink" title="1、codeBlockFuction.js 文件"></a>1、codeBlockFuction.js 文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;pre&#x27;</span>).wrap(<span class="string">&#x27;&lt;div class=&quot;code-area&quot; style=&quot;position: relative&quot;&gt;&lt;/div&gt;&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="2、codeBLang-js-文件"><a href="#2、codeBLang-js-文件" class="headerlink" title="2、codeBLang.js 文件"></a>2、codeBLang.js 文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $highlight_lang = $(<span class="string">&#x27;&lt;div class=&quot;code_lang&quot; title=&quot;代码语言&quot;&gt;&lt;/div&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  $(<span class="string">&#x27;pre&#x27;</span>).after($highlight_lang);</span><br><span class="line">  $(<span class="string">&#x27;pre&#x27;</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> code_language = $(<span class="built_in">this</span>).attr(<span class="string">&#x27;class&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!code_language) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> lang_name = code_language.replace(<span class="string">&quot;line-numbers&quot;</span>, <span class="string">&quot;&quot;</span>).trim().replace(<span class="string">&quot;language-&quot;</span>, <span class="string">&quot;&quot;</span>).trim();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 首字母大写</span></span><br><span class="line">lang_name = lang_name.slice(<span class="number">0</span>, <span class="number">1</span>).toUpperCase() + lang_name.slice(<span class="number">1</span>);</span><br><span class="line">$(<span class="built_in">this</span>).siblings(<span class="string">&quot;.code_lang&quot;</span>).text(lang_name);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="3、codeCopy-js-文件"><a href="#3、codeCopy-js-文件" class="headerlink" title="3、codeCopy.js 文件"></a>3、codeCopy.js 文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $copyIcon = $(<span class="string">&#x27;&lt;i class=&quot;fa fa-copy code_copy&quot; title=&quot;复制代码&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&#x27;</span>);</span><br><span class="line">    $(<span class="string">&#x27;.code-area&#x27;</span>).prepend($copyIcon);</span><br><span class="line"><span class="keyword">new</span> ClipboardJS(<span class="string">&#x27;.fa-copy&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">target</span>: <span class="function"><span class="keyword">function</span> (<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="4、clipboard-min-js-文件"><a href="#4、clipboard-min-js-文件" class="headerlink" title="4、clipboard.min.js 文件"></a>4、clipboard.min.js 文件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">* clipboard.js v2.0.4</span></span><br><span class="line"><span class="comment">* https://zenorocha.github.io/clipboard.js</span></span><br><span class="line"><span class="comment">* </span></span><br><span class="line"><span class="comment">* Licensed MIT © Zeno Rocha</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">! <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line"><span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">exports</span> &amp;&amp; <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">module</span> ? <span class="built_in">module</span>.exports = e() : <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> define &amp;&amp; define.amd ? define([], e) : <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">exports</span> ? <span class="built_in">exports</span>.ClipboardJS = e() : t.ClipboardJS = e()</span><br><span class="line">&#125;(<span class="built_in">this</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (o[t]) <span class="keyword">return</span> o[t].exports;</span><br><span class="line">    <span class="keyword">var</span> e = o[t] = &#123;</span><br><span class="line">        <span class="attr">i</span>: t,</span><br><span class="line">        <span class="attr">l</span>: !<span class="number">1</span>,</span><br><span class="line">        <span class="attr">exports</span>: &#123;&#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> n[t].call(e.exports, e, e.exports, r), e.l = !<span class="number">0</span>, e.exports</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r.m = n, r.c = o, r.d = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">    r.o(t, e) || <span class="built_in">Object</span>.defineProperty(t, e, &#123;</span><br><span class="line">        <span class="attr">enumerable</span>: !<span class="number">0</span>,</span><br><span class="line">        <span class="attr">get</span>: n</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;, r.r = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> <span class="built_in">Symbol</span> &amp;&amp; <span class="built_in">Symbol</span>.toStringTag &amp;&amp; <span class="built_in">Object</span>.defineProperty(t, <span class="built_in">Symbol</span>.toStringTag, &#123;</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;Module&quot;</span></span><br><span class="line">    &#125;), <span class="built_in">Object</span>.defineProperty(t, <span class="string">&quot;__esModule&quot;</span>, &#123;</span><br><span class="line">        <span class="attr">value</span>: !<span class="number">0</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;, r.t = <span class="function"><span class="keyword">function</span> (<span class="params">e, t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> &amp; t &amp;&amp; (e = r(e)), <span class="number">8</span> &amp; t) <span class="keyword">return</span> e;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">4</span> &amp; t &amp;&amp; <span class="string">&quot;object&quot;</span> == <span class="keyword">typeof</span> e &amp;&amp; e &amp;&amp; e.__esModule) <span class="keyword">return</span> e;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="built_in">Object</span>.create(<span class="literal">null</span>);</span><br><span class="line">    <span class="keyword">if</span> (r.r(n), <span class="built_in">Object</span>.defineProperty(n, <span class="string">&quot;default&quot;</span>, &#123;</span><br><span class="line">            <span class="attr">enumerable</span>: !<span class="number">0</span>,</span><br><span class="line">            <span class="attr">value</span>: e</span><br><span class="line">        &#125;), <span class="number">2</span> &amp; t &amp;&amp; <span class="string">&quot;string&quot;</span> != <span class="keyword">typeof</span> e)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> o <span class="keyword">in</span> e) r.d(n, o, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e[t]</span><br><span class="line">        &#125;.bind(<span class="literal">null</span>, o));</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line">&#125;, r.n = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e = t &amp;&amp; t.__esModule ? <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t.default</span><br><span class="line">    &#125; : <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> r.d(e, <span class="string">&quot;a&quot;</span>, e), e</span><br><span class="line">&#125;, r.o = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.hasOwnProperty.call(t, e)</span><br><span class="line">&#125;, r.p = <span class="string">&quot;&quot;</span>, r(r.s = <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">&#125;([<span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line"><span class="meta">    &quot;use strict&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> r = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">Symbol</span> &amp;&amp; <span class="string">&quot;symbol&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">Symbol</span>.iterator ? <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">typeof</span> t</span><br><span class="line">        &#125; : <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> t &amp;&amp; <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">Symbol</span> &amp;&amp; t.constructor === <span class="built_in">Symbol</span> &amp;&amp; t !== <span class="built_in">Symbol</span>.prototype ? <span class="string">&quot;symbol&quot;</span> : <span class="keyword">typeof</span> t</span><br><span class="line">        &#125;,</span><br><span class="line">        i = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; e.length; n++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> o = e[n];</span><br><span class="line">                    o.enumerable = o.enumerable || !<span class="number">1</span>, o.configurable = !<span class="number">0</span>, <span class="string">&quot;value&quot;</span> <span class="keyword">in</span> o &amp;&amp; (o.writable = !<span class="number">0</span>), <span class="built_in">Object</span>.defineProperty(t, o.key, o)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> e &amp;&amp; o(t.prototype, e), n &amp;&amp; o(t, n), t</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;(),</span><br><span class="line">        a = o(n(<span class="number">1</span>)),</span><br><span class="line">        c = o(n(<span class="number">3</span>)),</span><br><span class="line">        u = o(n(<span class="number">4</span>));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> t &amp;&amp; t.__esModule ? t : &#123;</span><br><span class="line">        <span class="attr">default</span>: t</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> l = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        ! <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!(t <span class="keyword">instanceof</span> e)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)</span><br><span class="line">        &#125;(<span class="built_in">this</span>, o);</span><br><span class="line">        <span class="keyword">var</span> n = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!t) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">ReferenceError</span>(<span class="string">&quot;this hasn&#x27;t been initialised - super() hasn&#x27;t been called&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> !e || <span class="string">&quot;object&quot;</span> != <span class="keyword">typeof</span> e &amp;&amp; <span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e ? t : e</span><br><span class="line">        &#125;(<span class="built_in">this</span>, (o.__proto__ || <span class="built_in">Object</span>.getPrototypeOf(o)).call(<span class="built_in">this</span>));</span><br><span class="line">        <span class="keyword">return</span> n.resolveOptions(e), n.listenClick(t), n</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> != <span class="keyword">typeof</span> e &amp;&amp; <span class="literal">null</span> !== e) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&quot;Super expression must either be null or a function, not &quot;</span> + <span class="keyword">typeof</span> e);</span><br><span class="line">        t.prototype = <span class="built_in">Object</span>.create(e &amp;&amp; e.prototype, &#123;</span><br><span class="line">            <span class="attr">constructor</span>: &#123;</span><br><span class="line">                <span class="attr">value</span>: t,</span><br><span class="line">                <span class="attr">enumerable</span>: !<span class="number">1</span>,</span><br><span class="line">                <span class="attr">writable</span>: !<span class="number">0</span>,</span><br><span class="line">                <span class="attr">configurable</span>: !<span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;), e &amp;&amp; (<span class="built_in">Object</span>.setPrototypeOf ? <span class="built_in">Object</span>.setPrototypeOf(t, e) : t.__proto__ = e)</span><br><span class="line">    &#125;(o, c.default), i(o, [&#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;resolveOptions&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="number">0</span> &lt; <span class="built_in">arguments</span>.length &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="built_in">arguments</span>[<span class="number">0</span>] ? <span class="built_in">arguments</span>[<span class="number">0</span>] : &#123;&#125;;</span><br><span class="line">            <span class="built_in">this</span>.action = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.action ? t.action : <span class="built_in">this</span>.defaultAction, <span class="built_in">this</span>.target = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.target ? t.target : <span class="built_in">this</span>.defaultTarget, <span class="built_in">this</span>.text = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.text ? t.text : <span class="built_in">this</span>.defaultText, <span class="built_in">this</span>.container = <span class="string">&quot;object&quot;</span> === r(t.container) ? t.container : <span class="built_in">document</span>.body</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;listenClick&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e = <span class="built_in">this</span>;</span><br><span class="line">            <span class="built_in">this</span>.listener = (<span class="number">0</span>, u.default)(t, <span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> e.onClick(t)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;onClick&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e = t.delegateTarget || t.currentTarget;</span><br><span class="line">            <span class="built_in">this</span>.clipboardAction &amp;&amp; (<span class="built_in">this</span>.clipboardAction = <span class="literal">null</span>), <span class="built_in">this</span>.clipboardAction = <span class="keyword">new</span> a.default(&#123;</span><br><span class="line">                <span class="attr">action</span>: <span class="built_in">this</span>.action(e),</span><br><span class="line">                <span class="attr">target</span>: <span class="built_in">this</span>.target(e),</span><br><span class="line">                <span class="attr">text</span>: <span class="built_in">this</span>.text(e),</span><br><span class="line">                <span class="attr">container</span>: <span class="built_in">this</span>.container,</span><br><span class="line">                <span class="attr">trigger</span>: e,</span><br><span class="line">                <span class="attr">emitter</span>: <span class="built_in">this</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;defaultAction&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> s(<span class="string">&quot;action&quot;</span>, t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;defaultTarget&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> e = s(<span class="string">&quot;target&quot;</span>, t);</span><br><span class="line">            <span class="keyword">if</span> (e) <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(e)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;defaultText&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> s(<span class="string">&quot;text&quot;</span>, t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;destroy&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="built_in">this</span>.listener.destroy(), <span class="built_in">this</span>.clipboardAction &amp;&amp; (<span class="built_in">this</span>.clipboardAction.destroy(), <span class="built_in">this</span>.clipboardAction = <span class="literal">null</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;], [&#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;isSupported&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> t = <span class="number">0</span> &lt; <span class="built_in">arguments</span>.length &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="built_in">arguments</span>[<span class="number">0</span>] ? <span class="built_in">arguments</span>[<span class="number">0</span>] : [<span class="string">&quot;copy&quot;</span>, <span class="string">&quot;cut&quot;</span>],</span><br><span class="line">                e = <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t ? [t] : t,</span><br><span class="line">                n = !!<span class="built_in">document</span>.queryCommandSupported;</span><br><span class="line">            <span class="keyword">return</span> e.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                n = n &amp;&amp; !!<span class="built_in">document</span>.queryCommandSupported(t)</span><br><span class="line">            &#125;), n</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;]), o</span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n = <span class="string">&quot;data-clipboard-&quot;</span> + t;</span><br><span class="line">    <span class="keyword">if</span> (e.hasAttribute(n)) <span class="keyword">return</span> e.getAttribute(n)</span><br><span class="line">&#125;</span><br><span class="line">t.exports = l</span><br><span class="line"></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line"><span class="meta">    &quot;use strict&quot;</span>;</span><br><span class="line">    <span class="keyword">var</span> o, r = <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">Symbol</span> &amp;&amp; <span class="string">&quot;symbol&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">Symbol</span>.iterator ? <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">typeof</span> t</span><br><span class="line">        &#125; : <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> t &amp;&amp; <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> <span class="built_in">Symbol</span> &amp;&amp; t.constructor === <span class="built_in">Symbol</span> &amp;&amp; t !== <span class="built_in">Symbol</span>.prototype ? <span class="string">&quot;symbol&quot;</span> : <span class="keyword">typeof</span> t</span><br><span class="line">        &#125;,</span><br><span class="line">        i = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> n = <span class="number">0</span>; n &lt; e.length; n++) &#123;</span><br><span class="line">                    <span class="keyword">var</span> o = e[n];</span><br><span class="line">                    o.enumerable = o.enumerable || !<span class="number">1</span>, o.configurable = !<span class="number">0</span>, <span class="string">&quot;value&quot;</span> <span class="keyword">in</span> o &amp;&amp; (o.writable = !<span class="number">0</span>), <span class="built_in">Object</span>.defineProperty(t, o.key, o)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> e &amp;&amp; o(t.prototype, e), n &amp;&amp; o(t, n), t</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;(),</span><br><span class="line">        a = n(<span class="number">2</span>),</span><br><span class="line">        c = (o = a) &amp;&amp; o.__esModule ? o : &#123;</span><br><span class="line">            <span class="attr">default</span>: o</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="keyword">var</span> u = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">t</span>) </span>&#123;</span><br><span class="line">            ! <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (!(t <span class="keyword">instanceof</span> e)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&quot;Cannot call a class as a function&quot;</span>)</span><br><span class="line">            &#125;(<span class="built_in">this</span>, e), <span class="built_in">this</span>.resolveOptions(t), <span class="built_in">this</span>.initSelection()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i(e, [&#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;resolveOptions&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> t = <span class="number">0</span> &lt; <span class="built_in">arguments</span>.length &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="built_in">arguments</span>[<span class="number">0</span>] ? <span class="built_in">arguments</span>[<span class="number">0</span>] : &#123;&#125;;</span><br><span class="line">                <span class="built_in">this</span>.action = t.action, <span class="built_in">this</span>.container = t.container, <span class="built_in">this</span>.emitter = t.emitter, <span class="built_in">this</span>.target = t.target, <span class="built_in">this</span>.text = t.text, <span class="built_in">this</span>.trigger = t.trigger, <span class="built_in">this</span>.selectedText = <span class="string">&quot;&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;initSelection&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.text ? <span class="built_in">this</span>.selectFake() : <span class="built_in">this</span>.target &amp;&amp; <span class="built_in">this</span>.selectTarget()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;selectFake&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> t = <span class="built_in">this</span>,</span><br><span class="line">                    e = <span class="string">&quot;rtl&quot;</span> == <span class="built_in">document</span>.documentElement.getAttribute(<span class="string">&quot;dir&quot;</span>);</span><br><span class="line">                <span class="built_in">this</span>.removeFake(), <span class="built_in">this</span>.fakeHandlerCallback = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">return</span> t.removeFake()</span><br><span class="line">                &#125;, <span class="built_in">this</span>.fakeHandler = <span class="built_in">this</span>.container.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="built_in">this</span>.fakeHandlerCallback) || !<span class="number">0</span>, <span class="built_in">this</span>.fakeElem = <span class="built_in">document</span>.createElement(<span class="string">&quot;textarea&quot;</span>), <span class="built_in">this</span>.fakeElem.style.fontSize = <span class="string">&quot;12pt&quot;</span>, <span class="built_in">this</span>.fakeElem.style.border = <span class="string">&quot;0&quot;</span>, <span class="built_in">this</span>.fakeElem.style.padding = <span class="string">&quot;0&quot;</span>, <span class="built_in">this</span>.fakeElem.style.margin = <span class="string">&quot;0&quot;</span>, <span class="built_in">this</span>.fakeElem.style.position = <span class="string">&quot;absolute&quot;</span>, <span class="built_in">this</span>.fakeElem.style[e ? <span class="string">&quot;right&quot;</span> : <span class="string">&quot;left&quot;</span>] = <span class="string">&quot;-9999px&quot;</span>;</span><br><span class="line">                <span class="keyword">var</span> n = <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">                <span class="built_in">this</span>.fakeElem.style.top = n + <span class="string">&quot;px&quot;</span>, <span class="built_in">this</span>.fakeElem.setAttribute(<span class="string">&quot;readonly&quot;</span>, <span class="string">&quot;&quot;</span>), <span class="built_in">this</span>.fakeElem.value = <span class="built_in">this</span>.text, <span class="built_in">this</span>.container.appendChild(<span class="built_in">this</span>.fakeElem), <span class="built_in">this</span>.selectedText = (<span class="number">0</span>, c.default)(<span class="built_in">this</span>.fakeElem), <span class="built_in">this</span>.copyText()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;removeFake&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.fakeHandler &amp;&amp; (<span class="built_in">this</span>.container.removeEventListener(<span class="string">&quot;click&quot;</span>, <span class="built_in">this</span>.fakeHandlerCallback), <span class="built_in">this</span>.fakeHandler = <span class="literal">null</span>, <span class="built_in">this</span>.fakeHandlerCallback = <span class="literal">null</span>), <span class="built_in">this</span>.fakeElem &amp;&amp; (<span class="built_in">this</span>.container.removeChild(<span class="built_in">this</span>.fakeElem), <span class="built_in">this</span>.fakeElem = <span class="literal">null</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;selectTarget&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.selectedText = (<span class="number">0</span>, c.default)(<span class="built_in">this</span>.target), <span class="built_in">this</span>.copyText()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;copyText&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> e = <span class="keyword">void</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    e = <span class="built_in">document</span>.execCommand(<span class="built_in">this</span>.action)</span><br><span class="line">                &#125; <span class="keyword">catch</span> (t) &#123;</span><br><span class="line">                    e = !<span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">this</span>.handleResult(e)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;handleResult&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.emitter.emit(t ? <span class="string">&quot;success&quot;</span> : <span class="string">&quot;error&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">action</span>: <span class="built_in">this</span>.action,</span><br><span class="line">                    <span class="attr">text</span>: <span class="built_in">this</span>.selectedText,</span><br><span class="line">                    <span class="attr">trigger</span>: <span class="built_in">this</span>.trigger,</span><br><span class="line">                    <span class="attr">clearSelection</span>: <span class="built_in">this</span>.clearSelection.bind(<span class="built_in">this</span>)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;clearSelection&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.trigger &amp;&amp; <span class="built_in">this</span>.trigger.focus(), <span class="built_in">window</span>.getSelection().removeAllRanges()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;destroy&quot;</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">this</span>.removeFake()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;action&quot;</span>,</span><br><span class="line">            <span class="attr">set</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> t = <span class="number">0</span> &lt; <span class="built_in">arguments</span>.length &amp;&amp; <span class="keyword">void</span> <span class="number">0</span> !== <span class="built_in">arguments</span>[<span class="number">0</span>] ? <span class="built_in">arguments</span>[<span class="number">0</span>] : <span class="string">&quot;copy&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>._action = t, <span class="string">&quot;copy&quot;</span> !== <span class="built_in">this</span>._action &amp;&amp; <span class="string">&quot;cut&quot;</span> !== <span class="built_in">this</span>._action) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Invalid &quot;action&quot; value, use either &quot;copy&quot; or &quot;cut&quot;&#x27;</span>)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>._action</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="attr">key</span>: <span class="string">&quot;target&quot;</span>,</span><br><span class="line">            <span class="attr">set</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">void</span> <span class="number">0</span> !== t) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (!t || <span class="string">&quot;object&quot;</span> !== (<span class="keyword">void</span> <span class="number">0</span> === t ? <span class="string">&quot;undefined&quot;</span> : r(t)) || <span class="number">1</span> !== t.nodeType) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Invalid &quot;target&quot; value, use a valid Element&#x27;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;copy&quot;</span> === <span class="built_in">this</span>.action &amp;&amp; t.hasAttribute(<span class="string">&quot;disabled&quot;</span>)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Invalid &quot;target&quot; attribute. Please use &quot;readonly&quot; instead of &quot;disabled&quot; attribute&#x27;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="string">&quot;cut&quot;</span> === <span class="built_in">this</span>.action &amp;&amp; (t.hasAttribute(<span class="string">&quot;readonly&quot;</span>) || t.hasAttribute(<span class="string">&quot;disabled&quot;</span>))) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;Invalid &quot;target&quot; attribute. You can\&#x27;t cut text from elements with &quot;readonly&quot; or &quot;disabled&quot; attributes&#x27;</span>);</span><br><span class="line">                    <span class="built_in">this</span>._target = t</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">this</span>._target</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;]), e</span><br><span class="line">    &#125;();</span><br><span class="line">    t.exports = u</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">    t.exports = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;SELECT&quot;</span> === t.nodeName) t.focus(), e = t.value;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;INPUT&quot;</span> === t.nodeName || <span class="string">&quot;TEXTAREA&quot;</span> === t.nodeName) &#123;</span><br><span class="line">            <span class="keyword">var</span> n = t.hasAttribute(<span class="string">&quot;readonly&quot;</span>);</span><br><span class="line">            n || t.setAttribute(<span class="string">&quot;readonly&quot;</span>, <span class="string">&quot;&quot;</span>), t.select(), t.setSelectionRange(<span class="number">0</span>, t.value.length), n || t.removeAttribute(<span class="string">&quot;readonly&quot;</span>), e = t.value</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            t.hasAttribute(<span class="string">&quot;contenteditable&quot;</span>) &amp;&amp; t.focus();</span><br><span class="line">            <span class="keyword">var</span> o = <span class="built_in">window</span>.getSelection(),</span><br><span class="line">                r = <span class="built_in">document</span>.createRange();</span><br><span class="line">            r.selectNodeContents(t), o.removeAllRanges(), o.addRange(r), e = o.toString()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> e</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line">    n.prototype = &#123;</span><br><span class="line">        <span class="attr">on</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> o = <span class="built_in">this</span>.e || (<span class="built_in">this</span>.e = &#123;&#125;);</span><br><span class="line">            <span class="keyword">return</span> (o[t] || (o[t] = [])).push(&#123;</span><br><span class="line">                <span class="attr">fn</span>: e,</span><br><span class="line">                <span class="attr">ctx</span>: n</span><br><span class="line">            &#125;), <span class="built_in">this</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">once</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> o = <span class="built_in">this</span>;</span><br><span class="line"></span><br><span class="line">​    <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">​        o.off(t, r), e.apply(n, <span class="built_in">arguments</span>)</span><br><span class="line">​    &#125;</span><br><span class="line">​    <span class="keyword">return</span> r._ = e, <span class="built_in">this</span>.on(t, r, n)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">emit</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">for</span> (<span class="keyword">var</span> e = [].slice.call(<span class="built_in">arguments</span>, <span class="number">1</span>), n = ((<span class="built_in">this</span>.e || (<span class="built_in">this</span>.e = &#123;&#125;))[t] || []).slice(), o = <span class="number">0</span>, r = n.length; o &lt; r; o++) n[o].fn.apply(n[o].ctx, e);</span><br><span class="line">​    <span class="keyword">return</span> <span class="built_in">this</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">off</span>: <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">​    <span class="keyword">var</span> n = <span class="built_in">this</span>.e || (<span class="built_in">this</span>.e = &#123;&#125;),</span><br><span class="line">​        o = n[t],</span><br><span class="line">​        r = [];</span><br><span class="line">​    <span class="keyword">if</span> (o &amp;&amp; e)</span><br><span class="line">​        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>, a = o.length; i &lt; a; i++) o[i].fn !== e &amp;&amp; o[i].fn._ !== e &amp;&amp; r.push(o[i]);</span><br><span class="line">​    <span class="keyword">return</span> r.length ? n[t] = r : <span class="keyword">delete</span> n[t], <span class="built_in">this</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;, t.exports = n</span><br><span class="line"></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> d = n(<span class="number">5</span>),</span><br><span class="line">        h = n(<span class="number">6</span>);</span><br><span class="line">    t.exports = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!t &amp;&amp; !e &amp;&amp; !n) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;Missing required arguments&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!d.string(e)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&quot;Second argument must be a String&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!d.fn(n)) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&quot;Third argument must be a Function&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (d.node(t)) <span class="keyword">return</span> s = e, f = n, (l = t).addEventListener(s, f), &#123;</span><br><span class="line">            <span class="attr">destroy</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                l.removeEventListener(s, f)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (d.nodeList(t)) <span class="keyword">return</span> a = t, c = e, u = n, <span class="built_in">Array</span>.prototype.forEach.call(a, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            t.addEventListener(c, u)</span><br><span class="line">        &#125;), &#123;</span><br><span class="line">            <span class="attr">destroy</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="built_in">Array</span>.prototype.forEach.call(a, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">                    t.removeEventListener(c, u)</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">if</span> (d.string(t)) <span class="keyword">return</span> o = t, r = e, i = n, h(<span class="built_in">document</span>.body, o, r, i);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">&quot;First argument must be a String, HTMLElement, HTMLCollection, or NodeList&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> o, r, i, a, c, u, l, s, f</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, n</span>) </span>&#123;</span><br><span class="line">    n.node = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> !== t &amp;&amp; t <span class="keyword">instanceof</span> HTMLElement &amp;&amp; <span class="number">1</span> === t.nodeType</span><br><span class="line">    &#125;, n.nodeList = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> e = <span class="built_in">Object</span>.prototype.toString.call(t);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span> !== t &amp;&amp; (<span class="string">&quot;[object NodeList]&quot;</span> === e || <span class="string">&quot;[object HTMLCollection]&quot;</span> === e) &amp;&amp; <span class="string">&quot;length&quot;</span> <span class="keyword">in</span> t &amp;&amp; (<span class="number">0</span> === t.length || n.node(t[<span class="number">0</span>]))</span><br><span class="line">    &#125;, n.string = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t || t <span class="keyword">instanceof</span> <span class="built_in">String</span></span><br><span class="line">    &#125;, n.fn = <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;[object Function]&quot;</span> === <span class="built_in">Object</span>.prototype.toString.call(t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = n(<span class="number">7</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">t, e, n, o, r</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="function"><span class="keyword">function</span> (<span class="params">e, n, t, o</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">            t.delegateTarget = a(t.target, n), t.delegateTarget &amp;&amp; o.call(e, t)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.apply(<span class="built_in">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">return</span> t.addEventListener(n, i, r), &#123;</span><br><span class="line">        <span class="attr">destroy</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            t.removeEventListener(n, i, r)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">t.exports = <span class="function"><span class="keyword">function</span> (<span class="params">t, e, n, o, r</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.addEventListener ? i.apply(<span class="literal">null</span>, <span class="built_in">arguments</span>) : <span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> n ? i.bind(<span class="literal">null</span>, <span class="built_in">document</span>).apply(<span class="literal">null</span>, <span class="built_in">arguments</span>) : (<span class="string">&quot;string&quot;</span> == <span class="keyword">typeof</span> t &amp;&amp; (t = <span class="built_in">document</span>.querySelectorAll(t)), <span class="built_in">Array</span>.prototype.map.call(t, <span class="function"><span class="keyword">function</span> (<span class="params">t</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i(t, e, n, o, r)</span><br><span class="line">    &#125;))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;undefined&quot;</span> != <span class="keyword">typeof</span> Element &amp;&amp; !Element.prototype.matches) &#123;</span><br><span class="line">        <span class="keyword">var</span> n = Element.prototype;</span><br><span class="line">        n.matches = n.matchesSelector || n.mozMatchesSelector || n.msMatchesSelector || n.oMatchesSelector || n.webkitMatchesSelector</span><br><span class="line">    &#125;</span><br><span class="line">    t.exports = <span class="function"><span class="keyword">function</span> (<span class="params">t, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (; t &amp;&amp; <span class="number">9</span> !== t.nodeType;) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;function&quot;</span> == <span class="keyword">typeof</span> t.matches &amp;&amp; t.matches(e)) <span class="keyword">return</span> t;</span><br><span class="line">            t = t.parentNode</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;])</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="5、codeShrink-js"><a href="#5、codeShrink-js" class="headerlink" title="5、codeShrink.js"></a>5、codeShrink.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码块收缩</span></span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> $code_expand = $(<span class="string">&#x27;&lt;i class=&quot;fa fa-chevron-down code-expand&quot; title=&quot;折叠代码&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line">  $(<span class="string">&#x27;.code-area&#x27;</span>).prepend($code_expand);</span><br><span class="line">  $(<span class="string">&#x27;.code-expand&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="built_in">this</span>).parent().hasClass(<span class="string">&#x27;code-closed&#x27;</span>)) &#123;</span><br><span class="line">      $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;pre&#x27;</span>).find(<span class="string">&#x27;code&#x27;</span>).show();</span><br><span class="line">      $(<span class="built_in">this</span>).parent().removeClass(<span class="string">&#x27;code-closed&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(<span class="built_in">this</span>).siblings(<span class="string">&#x27;pre&#x27;</span>).find(<span class="string">&#x27;code&#x27;</span>).hide();</span><br><span class="line">      $(<span class="built_in">this</span>).parent().addClass(<span class="string">&#x27;code-closed&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="二、配置css文件"><a href="#二、配置css文件" class="headerlink" title="二、配置css文件"></a>二、配置css文件</h2><p>进入要修改主题文件夹themes/**/source/css 路径之后，打开matery.css文件，添加以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line">code &#123;</span><br><span class="line">    <span class="attr">padding</span>: 1px 5px;</span><br><span class="line">    font-family: Inconsolata, Monaco, Consolas, <span class="string">&#x27;Courier New&#x27;</span>, Courier, monospace;</span><br><span class="line">    <span class="comment">/* font-size: 0.91rem; */</span></span><br><span class="line">    color: #e96900;</span><br><span class="line">    background-color: #f8f8f8;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre code &#123;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">    color: #e8eaf6;</span><br><span class="line">    background-color: #<span class="number">272822</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre[<span class="class"><span class="keyword">class</span>*</span>=<span class="string">&quot;language-&quot;</span>] &#123;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">1.</span>2em;</span><br><span class="line">    margin: .5em <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">code[<span class="class"><span class="keyword">class</span>*</span>=<span class="string">&quot;language-&quot;</span>],</span><br><span class="line">pre[<span class="class"><span class="keyword">class</span>*</span>=<span class="string">&quot;language-&quot;</span>] &#123;</span><br><span class="line">    <span class="attr">color</span>: #e8eaf6;</span><br><span class="line">    white-space: pre-wrap !important;</span><br><span class="line">&#125; */</span><br><span class="line"></span><br><span class="line">.line-numbers-rows &#123;</span><br><span class="line">    border-right-width: 0px !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.line-numbers &#123;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">1.</span>5rem <span class="number">1.</span>5rem <span class="number">1.</span>5rem <span class="number">3.</span>2rem !important;</span><br><span class="line">    margin: 1rem <span class="number">0</span> !important;</span><br><span class="line">    background: #<span class="number">272822</span>;</span><br><span class="line">    overflow: auto;</span><br><span class="line">    border-radius: <span class="number">0.</span>35rem;</span><br><span class="line">    tab-size: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pre &#123;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">1.</span>5rem !important;</span><br><span class="line">    margin: 1rem <span class="number">0</span> !important;</span><br><span class="line">    background: #<span class="number">272822</span>;</span><br><span class="line">    overflow: auto;</span><br><span class="line">    border-radius: <span class="number">0.</span>35rem;</span><br><span class="line">    tab-size: <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">pre</span>::before &#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    height: 16px;</span><br><span class="line">    margin-bottom: <span class="number">0</span>;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="attr">pre</span>::after &#123;</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&quot; &quot;</span>;</span><br><span class="line">    position: absolute;</span><br><span class="line">    border-radius: <span class="number">50</span>%;</span><br><span class="line">    background: #ff5f56;</span><br><span class="line">    width: 12px;</span><br><span class="line">    height: 12px;</span><br><span class="line">    top: <span class="number">0</span>;</span><br><span class="line">    left: 12px;</span><br><span class="line">    margin-top: 12px;</span><br><span class="line">    -webkit-box-shadow: 20px <span class="number">0</span> #ffbd2e, 40px <span class="number">0</span> #27c93f;</span><br><span class="line">    box-shadow: 20px <span class="number">0</span> #ffbd2e, 40px <span class="number">0</span> #27c93f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">code &#123;</span><br><span class="line">    <span class="attr">padding</span>: 1px 5px;</span><br><span class="line">    font-family: Inconsolata, Monaco, Consolas, <span class="string">&#x27;Courier New&#x27;</span>, Courier, monospace;</span><br><span class="line">    font-size: <span class="number">0.</span>91rem;</span><br><span class="line">    color: #e96900;</span><br><span class="line">    background-color: #f8f8f8;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.code_copy &#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    top: <span class="number">0.</span>7rem;</span><br><span class="line">    right: 35px;</span><br><span class="line">    z-index: <span class="number">1</span>;</span><br><span class="line">    filter: invert(<span class="number">50</span>%);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.code_lang &#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    top: <span class="number">1.</span>2rem;</span><br><span class="line">    right: 60px;</span><br><span class="line">    line-height: <span class="number">0</span>;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    font-family: normal;</span><br><span class="line">    z-index: <span class="number">1</span>;</span><br><span class="line">    filter: invert(<span class="number">50</span>%);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">.code-expand &#123;</span><br><span class="line">    <span class="attr">position</span>: absolute;</span><br><span class="line">    top: 4px;</span><br><span class="line">    right: 0px;</span><br><span class="line">    filter: invert(<span class="number">50</span>%);</span><br><span class="line">    padding: 7px 10px;</span><br><span class="line">    z-index: <span class="number">1</span>;</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    transition: all .3s;</span><br><span class="line">    transform: rotate(0deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.code-closed .code-expand &#123;</span><br><span class="line">    <span class="attr">transform</span>: rotate(-180deg) !important;</span><br><span class="line">    transition: all .3s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.code-closed pre::before &#123;</span><br><span class="line">    <span class="attr">height</span>: 0px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre code &#123;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">0</span>;</span><br><span class="line">    color: #e8eaf6;</span><br><span class="line">    background-color: #<span class="number">272822</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pre[<span class="class"><span class="keyword">class</span>*</span>=<span class="string">&quot;language-&quot;</span>] &#123;</span><br><span class="line">    <span class="attr">padding</span>: <span class="number">1.</span>2em;</span><br><span class="line">    margin: .5em <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">code[<span class="class"><span class="keyword">class</span>*</span>=<span class="string">&quot;language-&quot;</span>],</span><br><span class="line">pre[<span class="class"><span class="keyword">class</span>*</span>=<span class="string">&quot;language-&quot;</span>] &#123;</span><br><span class="line">    <span class="attr">color</span>: #e8eaf6;</span><br><span class="line">    white-space: pre-wrap !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、在post-ejs文件中添加如下代码"><a href="#三、在post-ejs文件中添加如下代码" class="headerlink" title="三、在post.ejs文件中添加如下代码"></a>三、在post.ejs文件中添加如下代码</h2><p>路径为主题文件夹下的layout文件夹中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/libs/codeBlock/codeBlockFuction.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;!-- 代码语言 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/libs/codeBlock/codeLang.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!-- 代码块复制 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/libs/codeBlock/codeCopy.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/libs/codeBlock/clipboard.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!-- 代码块收缩 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/libs/codeBlock/codeShrink.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> </span><br><span class="line">&lt;!-- 代码块折行 --&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="selector-tag">code</span><span class="selector-attr">[class*=<span class="string">&quot;language-&quot;</span>]</span>, pre<span class="selector-attr">[class*=<span class="string">&quot;language-&quot;</span>]</span> &#123; <span class="attribute">white-space</span>: pre <span class="meta">!important</span>; &#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>全部完成之后，重新部署即可</p>]]></content>
      
      
      <categories>
          
          <category> 课外学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为Hexo博客添加音乐播放界面</title>
      <link href="/2022/10/21/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E7%95%8C%E9%9D%A2/"/>
      <url>/2022/10/21/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E7%95%8C%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<p>To learn！</p><p>To live！ </p><p>To love！</p><hr><h1 id="为Hexo博客添加音乐播放界面"><a href="#为Hexo博客添加音乐播放界面" class="headerlink" title="为Hexo博客添加音乐播放界面"></a>为Hexo博客添加音乐播放界面</h1><h2 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h2>]]></content>
      
      
      <categories>
          
          <category> 课外学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为Hexo博客添加二次元小人物</title>
      <link href="/2022/10/21/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%BA%8C%E6%AC%A1%E5%85%83%E5%B0%8F%E4%BA%BA%E7%89%A9/"/>
      <url>/2022/10/21/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E4%BA%8C%E6%AC%A1%E5%85%83%E5%B0%8F%E4%BA%BA%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<p>To learn！To live！ To love！</p><h1 id="为Hexo博客添加二次元小人物"><a href="#为Hexo博客添加二次元小人物" class="headerlink" title="为Hexo博客添加二次元小人物"></a>为Hexo博客添加二次元小人物</h1><h2 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h2>]]></content>
      
      
      <categories>
          
          <category> 课外学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何利用Hexo部署自己的博客空间</title>
      <link href="/2022/10/21/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/10/21/%E5%A6%82%E4%BD%95%E5%88%A9%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>To learn！To live！ To love！</p><hr><h1 id="如何利用-Hexo-部署自己的博客空间"><a href="#如何利用-Hexo-部署自己的博客空间" class="headerlink" title="如何利用 Hexo 部署自己的博客空间"></a>如何利用 Hexo 部署自己的博客空间</h1><h2 id="一、安装Node-js"><a href="#一、安装Node-js" class="headerlink" title="一、安装Node.js"></a>一、安装Node.js</h2><p> <a href="https://nodejs.org/en/">Node.js (nodejs.org)</a>  网站下载长期支持版 LTS，然后安装，不停的下一步即可，安装后会有两个组件，一个Node本身，另外一个npm管理器（搭建hexo博客必要的）</p><h2 id="二、打开终端，可以利用git-bash"><a href="#二、打开终端，可以利用git-bash" class="headerlink" title="二、打开终端，可以利用git.bash"></a>二、打开终端，可以利用git.bash</h2><p>查看刚刚安装的版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><h2 id="三、搭建hexo框架"><a href="#三、搭建hexo框架" class="headerlink" title="三、搭建hexo框架"></a>三、搭建hexo框架</h2><p>由于国内限制，下载比较慢，所以可以先安装一个taobao的镜像源</p><p>cnpm -v 查看安装版本</p><p>然后利用cnpm搭建hexo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm -v </span><br><span class="line"></span><br><span class="line">cnpm install -g hexo-cli </span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="四、建个博客专属文件夹"><a href="#四、建个博客专属文件夹" class="headerlink" title="四、建个博客专属文件夹"></a>四、建个博客专属文件夹</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pwd #查看当前路径</span><br><span class="line">mkdir blog </span><br><span class="line">cd blog</span><br></pre></td></tr></table></figure><p>如果前面流程有什么问题，可以直接删除文件夹，重新来过</p><h2 id="五、初始化博客"><a href="#五、初始化博客" class="headerlink" title="五、初始化博客"></a>五、初始化博客</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo init #初始化</span><br><span class="line"></span><br><span class="line">hexo s #启动博客，预览使用</span><br><span class="line"></span><br><span class="line">hexo n &quot;我的第一篇博客&quot;  #会自动生成md文件，位于source\/_posts文件夹下  需要在博客专属文件夹下使用此命令</span><br><span class="line"></span><br><span class="line">hexo g #部署上传新的博客</span><br></pre></td></tr></table></figure><h2 id="六、把博客部署到GitHub上"><a href="#六、把博客部署到GitHub上" class="headerlink" title="六、把博客部署到GitHub上"></a>六、把博客部署到GitHub上</h2><p>新建一个仓库，名字命名一定要符合要求，前面为GitHub用户名，后缀gitHub.io，后续输入这个网址XXX.github.io即可直接访问</p><p> 然后在博客文件夹下安装一个部署的插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure><p>设置配置文件_config.yml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd blog </span><br><span class="line"></span><br><span class="line">vim _config.yml</span><br></pre></td></tr></table></figure><p>在文件的最底部有 #deployment 这里需要做些配置，配置如下：</p><p>type：git</p><p>repo：<a href="https://github.com/xxx/xxx.github.io.git">https://github.com/xxx/xxx.github.io.git</a>   前面在github创建的博客仓库所在的地址</p><p>branch：master</p><p>配置完成后保存退出 ESC  :wq</p><p>#注意，每行第一个冒号后面有一个空格</p><p>部署到远端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>然后输入github的账号密码</p><h2 id="七、更换博客主题"><a href="#七、更换博客主题" class="headerlink" title="七、更换博客主题"></a>七、更换博客主题</h2><p>进入博客文件夹，下载主题到 themes 文件下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br><span class="line"></span><br><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure><p>修改配置文件_config.yml </p><p>themes：yilia （找到themes这一行，把主题名进行修改，修改好如左）</p><h2 id="八、日常部署命令"><a href="#八、日常部署命令" class="headerlink" title="八、日常部署命令"></a>八、日常部署命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清理</span><br><span class="line"></span><br><span class="line">hexo g #生成</span><br><span class="line"></span><br><span class="line">hexo s #预览</span><br><span class="line"></span><br><span class="line">hexo d #部署</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 课外学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SNP GWAS</title>
      <link href="/2021/07/19/SNPGWASwyb/"/>
      <url>/2021/07/19/SNPGWASwyb/</url>
      
        <content type="html"><![CDATA[<p>Welcome ! This is my first post. Check documentation for more info. To live, to love, to learn, and love is love !</p><p><strong>by wuyubing 2021/07/12</strong></p><h1 id="常规SNP-GWAS分析"><a href="#常规SNP-GWAS分析" class="headerlink" title="常规SNP GWAS分析"></a>常规SNP GWAS分析</h1><p>GWAS脚本复演</p><h2 id="1，质控"><a href="#1，质控" class="headerlink" title="1，质控"></a>1，质控</h2><p> vcf=Variant Call Format 是用于描述SNP，InDel和SV结果的文本文件质控</p><p>#查看vcf格式压缩文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zmore 505_maf0.05.int0.9.vcf.gz</span><br></pre></td></tr></table></figure><p>染色体设置要比基因组多，不可以少，选择推荐的41：–chr-set 41</p><p>#Convert vcf to Plink format：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --vcf 505_maf0.05.int0.9.vcf.gz --chr-set 41 --make-bed --out 505_maf0.05.int0.9 </span><br></pre></td></tr></table></figure><p>#为缺少rs标识符的SNP分配唯一的标识符：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_maf0.05.int0.9 --set-missing-var-ids @:#[c41]\$1,\$2 --chr-set 41 --make-bed --out 505_maf0.05.int0.9_no_missing_IDs</span><br></pre></td></tr></table></figure><p> [c41]为自己取的名字 </p><p>–geno：排除大部分受试者中缺失的 SNP;</p><p>-‐mind：排除基因型缺失率高的个体。</p><p>建议首先基于宽松的阈值（0.2;&gt; 20％）过滤 SNP 和个体，过滤掉丢失程度很高的 SNP 和个体。然后再应用更严格的过滤参数（0.02）。**注意，应先执行 SNP 过滤再进行个体水平过滤。 </p><p> #根据缺失的基因型数据删除SNP：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_maf0.05.int0.9_no_missing_IDs --geno 0.2 --allow-no-sex --chr-set 41 --make-bed --out 505_MDS </span><br></pre></td></tr></table></figure><p>#根据缺失的基因型数据删除个体：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS --mind 0.2 --allow-no-sex --chr-set 41 --make-bed --out 505_MDS2</span><br></pre></td></tr></table></figure><p> #根据缺失的基因型数据删除SNP：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS2 --geno 0.02 --allow-no-sex --chr-set 41 --make-bed --out 505_MDS3 </span><br></pre></td></tr></table></figure><p>#根据缺失的基因型数据删除个体：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS3 --mind 0.02 --allow-no-sex --chr-set 41 --make-bed --out 505_MDS4</span><br></pre></td></tr></table></figure><p> ‐‐maf：仅输出高于 MAF 阈值的 SNP。MAF 低的 SNP 很罕见，因此缺乏检测 SNP 表型关联的 power 。这些 SNP 也更容易出现基因分型错误。MAF 阈值应取决于样本量，较大的样本可以使用较低的 MAF 阈值。对于大样本（N = 100,000）与中等样本（N = 10000），通常将 0.01 和 0.05 用作 MAF 阈值。 </p><p>#根据最小等位基因频率（MAF）去筛选：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS4 --maf 0.05 --allow-no-sex --chr-set 41 --make-bed --out 505_MDS5</span><br></pre></td></tr></table></figure><h2 id="2，群体结构分析"><a href="#2，群体结构分析" class="headerlink" title="2，群体结构分析"></a>2，群体结构分析</h2><p> #将质控之后的505_MDS5文件复制到Structure文件夹进行下一步分析</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp 505_MDS5.*  /vol3/agis/chengshifeng_group/wuyubing/brassica/guo/02_structure</span><br></pre></td></tr></table></figure><p> #LD筛选：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS5 --indep-pairwise 50 10 0.2 --chr-set 41</span><br></pre></td></tr></table></figure><p>#将其转化为bed文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS5 --extract plink.prune.in --chr-set 41 --make-bed --out 505LD</span><br></pre></td></tr></table></figure><p> #安装admixture </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install admixture</span><br></pre></td></tr></table></figure><p>#计算K的CV值</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> K <span class="keyword">in</span> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15;<span class="keyword">do</span>;admixture --cv 505LD.bed <span class="variable">$K</span> | tee <span class="built_in">log</span><span class="variable">$&#123;K&#125;</span>.out;<span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><p>#使用grep查看<em>out文件的cv error(交叉验证的误差)值：</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -h CV *.out</span><br></pre></td></tr></table></figure><p>CV error (K=10): 0.84891</p><p>CV error (K=11): 0.84703</p><p>CV error (K=12): 0.84678</p><p>CV error (K=13): 0.84851</p><p>CV error (K=14): 0.84789</p><p>CV error (K=15): 0.85001</p><p>CV error (K=1): 0.94150</p><p>CV error (K=2): 0.90103</p><p>CV error (K=3): 0.88261</p><p>CV error (K=4): 0.87245</p><p>CV error (K=5): 0.86499</p><p>CV error (K=6): 0.85874</p><p>CV error (K=7): 0.85451</p><p>CV error (K=8): 0.85246</p><p>CV error (K=9): 0.84955 </p><p>有待完善</p><p>#使用R作图：</p><p>#启用R：</p><p>R</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">two=read.table(<span class="string">&quot;505LD.2.Q&quot;</span>)</span><br><span class="line">head(two)</span><br><span class="line"></span><br><span class="line">pdf(<span class="string">&quot;K2.pdf&quot;</span>,height=<span class="number">10</span>,width=<span class="number">16</span>)</span><br><span class="line">barplot(t(as.matrix(two)), col=rainbow(<span class="number">2</span>), xlab=<span class="string">&quot;Individual&quot;</span>, ylab=<span class="string">&quot;Ancestry&quot;</span>, border=<span class="literal">NA</span>)</span><br><span class="line">dev.off()</span><br><span class="line"></span><br><span class="line">png(<span class="string">&quot;K2.png&quot;</span>,height=<span class="number">1000</span>,width=<span class="number">1600</span>)</span><br><span class="line">barplot(t(as.matrix(two)), col=rainbow(<span class="number">2</span>),xlab=<span class="string">&quot;Individual&quot;</span>, ylab=<span class="string">&quot;Ancestry&quot;</span>, border=<span class="literal">NA</span>)</span><br><span class="line">dev.off()</span><br></pre></td></tr></table></figure><h2 id="3，亲缘关系分析"><a href="#3，亲缘关系分析" class="headerlink" title="3，亲缘关系分析"></a>3，亲缘关系分析</h2><p>#将QC及筛选后结果复制到kinship文件夹：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp 505_MDS5.* /vol3/agis/chengshifeng_group/wuyubing/brassica/guo/03_kinship</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink --bfile 505_MDS5 --recode 12 --output-missing-genotype 0 --transpose --chr-set 41 -out 505</span><br></pre></td></tr></table></figure><p> 生成505.tfam/tped文件</p><p>调用emmax:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emmax;emmax-kin -v -h -d 10 505</span><br></pre></td></tr></table></figure><p> 生成（505.hBN.kinf） </p><h2 id="4，将表型数据和基因数据整理成一致"><a href="#4，将表型数据和基因数据整理成一致" class="headerlink" title="4，将表型数据和基因数据整理成一致"></a>4，将表型数据和基因数据整理成一致</h2><p>表型数据格式：两列和基因型对应的编号，一列表型数据 </p><p>表型最优无偏预测</p><h2 id="5，跑gwas"><a href="#5，跑gwas" class="headerlink" title="5，跑gwas"></a>5，跑gwas</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">emmax -v -d 10 -t 505 -o df_gwas_result -p 2phe_gtdianfeng.txt -k 505.BN.kinf -c cov.emmax.txt</span><br></pre></td></tr></table></figure><p>df_gwas_result ：输出结果文件名</p><p>2phe_gtdianfeng.txt：输入表型文件</p><p>505.BN.kinf：输入上一步亲缘关系产生的.kinf文件</p><p>cov.emmax.txt：输入协变量文件 </p><h2 id="6，结果可视化（曼哈顿图和QQ图）"><a href="#6，结果可视化（曼哈顿图和QQ图）" class="headerlink" title="6，结果可视化（曼哈顿图和QQ图）"></a>6，结果可视化（曼哈顿图和QQ图）</h2><p>在服务器里提交有R脚本的作业 </p><p>先写个R脚本后缀 .r,</p><p>然后在 .sh脚本里 Rscript  .r 运行R脚本，</p><p>然后正常提交作业 </p><p>画SNP密度图安装r包CMplot:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install.packages(<span class="string">&quot;CMplot&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#SNP-density plot</span></span><br><span class="line"></span><br><span class="line">library(CMplot)</span><br><span class="line"></span><br><span class="line">datetwo=read.csv(<span class="string">&quot;two_gwas_result_delete_random.txt&quot;</span>,header=<span class="built_in">T</span>,sep=<span class="string">&quot;\t&quot;</span>)</span><br><span class="line"></span><br><span class="line">head(datetwo)</span><br><span class="line"></span><br><span class="line">CMplot(datetwo,type=<span class="string">&quot;p&quot;</span>,plot.type=<span class="string">&quot;d&quot;</span>,bin.size=<span class="number">1e6</span>,chr.den.col=<span class="built_in">c</span>(<span class="string">&quot;darkgreen&quot;</span>,<span class="string">&quot;yellow&quot;</span>,<span class="string">&quot;red&quot;</span>),file=<span class="string">&quot;jpg&quot;</span>,memo=<span class="string">&quot;&quot;</span>,dpi=<span class="number">600</span>,file.output=<span class="literal">TRUE</span>,verbose=<span class="literal">TRUE</span>,width=<span class="number">9</span>,height=<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#绘制单性状曼哈顿图</span></span><br><span class="line"></span><br><span class="line">CMplot(datetwo,plot.type=<span class="string">&quot;m&quot;</span>, LOG10=<span class="literal">TRUE</span>, ylim=<span class="literal">NULL</span>, threshold=<span class="built_in">c</span>(<span class="number">1e-3</span>,<span class="number">1e-2</span>),threshold.col=<span class="built_in">c</span>(<span class="string">&#x27;grey&#x27;</span>,<span class="string">&#x27;black&#x27;</span>), threshold.lty = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">2</span>),threshold.lwd = <span class="built_in">c</span>(<span class="number">1</span>,<span class="number">1</span>), amplify = <span class="built_in">T</span>,signal.cex = <span class="built_in">c</span>(<span class="number">1.5</span>,<span class="number">1.5</span>), signal.pch = <span class="built_in">c</span>(<span class="number">19</span>,<span class="number">19</span>),signal.col = <span class="built_in">c</span>(<span class="string">&quot;firebrick1&quot;</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 项目学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GWAS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
